#include <iostream>
#include <stdio.h>
#include <string>   
#include <cstdlib>
#include <ctime>
#include <Windows.h>
using namespace std;
//헤더 파일 선언

//유저 관리하는 클래스
class user {
	int money;
	int user_loc;
	bool revial = false;
	string name;
public:
	user(int money, int user_loc) {
		cout << "플레이어 이름 지정: ";
		cin >> name;
		this->name = name;
		this->money = money;
		this->user_loc = user_loc;
		cout << "유저 생성 " << "돈: " << this->money << "원" << endl;
		cout << endl;
	}
	int getMoney() { return money; } //해당 유저의 돈을 가지고 온다.
	string getName() { return this->name; } //해당 유저의 이름을 가지고 온다.
	void setMoney(int money) { this->money = money; } //해당 유저의 돈을 세팅한다.
	int getLoc(); //해당 유저의 위치를 가지고 온다.
	void setLoc(int dice) { this->user_loc += dice; } //해당 유저의 위치를 설정한다.
	void getRevial(bool boo) { this->revial = boo; } // 포춘 쿠키 2의 면책을 설정한다.
	bool isRevial() { return this->revial; } //면책 카드의 유무를 확인한다. 
};
int user::getLoc() {
	if (this->user_loc > 25) {
		cout << "★★★★★한 바퀴 돌았습니다. 보너스 30만 원 지급★★★" << endl << endl;
		this->money += 300000;
		user_loc %= 26;
	}
	return this->user_loc;
}

// 도시 관련 클래스
class land {
protected:
	string name;
	//string info;
	string status;
	int num;
	int owner;
	string owner_name;
	int price;
	int building;
public:
	land() {}
	land(int num, string name, int price=0, int owner=5, int building = 1) { //생성자 이름, 가격, 소유자, 도시인지 행운카드인지 결정한다.
		this->num = num;
		this->name = name;
		this->price = price;
		this->owner = owner;
		this->building = building;
		this->owner_name = "미정";
	}

	int getPrice() { return this->price; } //해당 지역의 가격
	int getNumber() { return this->num;  }
	int getOwner() { return this->owner; } //해당 지역의 소유자
	int getBuilding() { return this->building; } //해당 지역의 타입
	void setOwner(int i) { this->owner = i; } //소유자의 유무 설정
	void setOwner_name(string str) { this->owner_name = str; }//소유자 이름 설정
	string getOwner_name() { return this->owner_name; } //소유자 이름 불러오기
	string getInfo() { return this->name; } //지역 정보 불러오기
	string getInfo(user* u1, user* u2) {
		if (u1->getLoc() == this->getNumber() && u2->getLoc() == this->getNumber())
			status = this->name + "●●";
		else if (u1->getLoc() == this->getNumber() && u2->getLoc() != this->getNumber())
			status = this->name + "●○";
		else if (u2->getLoc() == this->getNumber() && u1->getLoc() != this->getNumber())
			status = this->name + "○●";
		else
			status = this->name + "○○";

		if (this->getOwner_name() == u1->getName())
			status += "①";
		else if (this->getOwner_name() == u2->getName())
			status += "②";
		else if (this->building == 0)
			status += "▣";
		else if (this->building == 1)
			status += "▦";
		else
			status += "▒";

		return status;
	}
};

//포춘 쿠키 지역 클래스
class special_city : public land {
	int card = 0; // 3가지 아이템을 선택하기 위한 변수
public:
	special_city() { cout << "┏━━━━━포춘 지역에 들어왔습니다.━━━━━┓" << endl; }
	~special_city() { cout << "▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼" << endl; }
    void special_effect(user *u); // 부모 클래스 land의 메소드 오버 라이딩
};

void special_city::special_effect(user *u) { // 아이템 뽑는 메소드
	srand((unsigned)time(NULL));
	card = rand() % 3 + 1;
	switch (card) {
		{
	case 1:
		cout << "포춘 카드 1: 불우이웃 돕기 30만 원 기부 " << endl;
		u->setMoney(u->getMoney() - 300000);
		break;
	case 2:
		cout << "포춘 카드 2: 파산 면책" << endl;
		if (u->isRevial()) { cout << "이미 파산 면책 카드를 가지고 있습니다."; }
		else u->getRevial(true);
		break;
	default:
		cout << "포춘 카드 3: 꽝 " << endl;
		break;
		}
	}
};

//퀴즈 게임
class quizGame {
	int timer;
	int qz_num = 0;
	string quiz[3] = { "2018 월드컵 우리의 첫 번째 상대는?", "이 프로그램을 만든 사람의 이름은?", "c++ 수업을 맡고 있는 교수님은?" };
	string answer[3] = { "스웨덴", "안주영", "홍성웅" };
	string user_answer;
public:
	quizGame() { cout << "┏━━━━━퀴즈랜드에 도착하였습니다.━━━━━┓" << endl;}
	~quizGame() { cout << "▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼" << endl; }
	void startGame(user *u) {
		srand((unsigned)time(NULL));
		this->qz_num = rand() % 3;

		cout << quiz[qz_num] << endl << "정답: ";
		cin >> user_answer;

		if (answer[qz_num] != user_answer) {
			cout << "틀렸습니다." << endl;
		}
		else {
			cout << "맞았습니다. 10만 원 지급" << endl;
			u->setMoney(u->getMoney() + 100000);
		}
	}
};

//게임에 관련된 클래스
class game {
public:
	int dice = 0;
	int num = 0;
	int num1 = 0;  //turn 체크를 위한 변수
	int turn_count = 0; //현재 몇 턴인지 체크 변수
	int setMoney = 0; 
	user *u1, *u2; //유저 두 명의 주소를 지정할 포인터
	user *turn; //매 턴마다 유저 두 명의 주소를 변경하며 지정할 포인터
	land *ld;

	//초기화 설정
	void init() {
		cout << "초기 자금을 설정하세요(단위: 만 원): ";
		cin >> setMoney;
		cout << endl;
		turn_count = 1;
		u1 = new user(setMoney*10000, 0);
		u2 = new user(setMoney*10000, 0);
		ld = new land[26]
		{ land(0, "시작", 0, 0, 0), land(1, "수원", 200000, 0, 0), land(2, "안양", 150000, 0, 0),
			land(3, "인천", 180000, 0, 0), land(4, "부산", 240000, 0, 0), land(5, "제주", 250000, 0, 0),
			land(6, "포춘"), land(7, "천안", 280000, 0, 0), land(8, "강릉", 310000, 0, 0),
			land(9, "울산", 420000, 0, 0), land(10, "대전", 370000, 0, 0), land(11, "대천", 290000, 0, 0),
			land(12, "퀴즈", 0, 0, 2), land(13, "여수", 300000, 0, 0), land(14, "포항", 500000, 0, 0),
			land(15, "전주", 370000, 0, 0), land(16, "대구", 490000, 0, 0), land(17, "연천", 230000, 0, 0),
			land(18, "광주", 380000, 0, 0), land(19, "포춘"), land(20, "철원", 180000, 0, 0), 
			land(21, "강남", 380000, 0, 0), land(22, "청주", 270000, 0, 0), land(23, "파주", 420000, 0, 0),
			land(24, "광교", 480000, 0, 0), land(25, "포춘")
		};
	}

	//게임 시작
	void start() {
		cout << "게임을 시작합니다" << endl;
		cout << endl;
		turn = u1; //초기 턴 지정
		while (true) {
			turnOver();
			cout << "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" << endl;
			cout << turn->getName() << "님의 턴" << endl;
			cout << "자동으로 주사위를 굴립니다." << endl;
			srand((unsigned)time(NULL));
			dice = rand() % 6 + 1;
			cout << "주사위 값: " << dice << endl;
			turn->setLoc(dice);
			cout << endl;
			cout << turn->getName() << "님☞ " << dice << "칸 이동 " << "현재 위치: " << ld[turn->getLoc()].getInfo() << endl;
			cout << "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" << endl;
			if (turn->getLoc() != 0) { goLand(turn, (turn == u1) ? u2 : u1, &ld[turn->getLoc()]); }
			else startLine(turn);

			if (turn->getMoney() <= 0) {
				cout << turn->getName() << "님이 파산하였습니다." << endl;

				if (turn->isRevial()) {
					cout << "파산 면책 카드를 가지고 있습니다. 파산을 면하였습니다. 50만 원 자금 지급" << endl;
					turn->setMoney(500000);
					turn->getRevial(false);
				}
				else {
					cout << "G A M E O V E R " << endl;
					break;
				}
			}
			cout << endl;
			cout << "다음 턴: '1'";
			int next;
			cin >> next;
			cout << endl;

			system("cls");

			if (next == 1) {
				if (num1++ % 2 == 0) { turn = u2; }
				else {
					turn = u1;
					turn_count += 1; //턴이 끝날 때 턴수 증가
				}
			}
		}
		cout << "게임 종료" << endl;
		delete u1, u2, turn;
		delete[]ld;
	}

	//주사위로 이동이 되었을 때 실행되는 메소드
	void goLand(user *u, user *u1, land *l) {	
		//땅의 소유자가 0 없다면
		if (l->getBuilding() == 0) {
			cout << "현재 이 곳의 소유자는 " << l->getOwner_name() << "입니다." << endl << endl;
			if (l->getOwner() == 0 ) {
				cout << u->getName() << "님의 현재 가진 금액은 " << u->getMoney() << "원 입니다. " << u->getName() << "님 건물을 구매하시겠습니까? (1: 구매, 2: 취소)" << endl;
				cout << "건물 매매가: " << l->getPrice() << "원" << endl;
				cin >> num;
				if (num == 1) {
					if (u->getMoney() >= l->getPrice()) {
						cout << l->getInfo() << " 구매 완료" << endl;
						l->setOwner_name(u->getName());
						l->setOwner(1);
						u->setMoney(u->getMoney() - l->getPrice());
					}
					else
						cout << u->getName() << " 금액 부족" << endl;
				}
				else {
					cout << "취소" << endl;
				}
			}
			// 소유자가 1있다면
			else if (l->getOwner() == 1) {
				// 소유자가 있는데 그것이 자신이 아니라면
				if (l->getOwner_name() != u->getName()) {
					cout << "이 곳은 당신의 소유지가 아닙니다. 통행료 " << l->getPrice() << "를 지불합니다." << endl;
					u->setMoney(u->getMoney() - l->getPrice());
					cout << "현재 금액: " << u->getMoney() << "원" << endl << endl;

					//자신이 아닌데 인수할 돈이 있다면
					if (u->getMoney() >= (l->getPrice()*1.1)) {
						cout << "당신은 인수할 수 있습니다. 인수 하시겠습니까? (1: 인수, 2: 취소)" << endl;
						cout << "인수 가격: " << l->getPrice()*1.1 << "원" << endl;
						cin >> num;
						if (num == 1) {
							u->setMoney(u->getMoney() - (l->getPrice()*1.1));
							u1->setMoney(u1->getMoney() + (l->getPrice()*1.1));
							l->setOwner_name(u->getName());
							cout << u->getName() << "님이 인수를 완료했습니다. " << "현재 금액: " << u->getMoney() <<"원"<< endl;
							cout << u1->getName() << "님의 금액이 인수 금액만큼 추가 됐습니다. " << u1->getMoney() <<"원" << endl;
						}
					}
				}
				//자신의 소유지라면
				else {
					cout << "이 곳은 당신의 소유지입니다." << endl;
				}
			}
		}
		else if (l->getBuilding() == 1) {
			// 땅이 포춘 도시의 타입이라면			
			special_city *sc = new special_city();
			sc->special_effect(u);
			delete sc;
		}

		else if (l->getBuilding() == 2) {
			// 땅이 퀴즈 랜드라면
			quizGame *qg = new quizGame();
			qg->startGame(u);
			delete qg;
		}
	}

	//시작 라인에 딱 들어선다면
	void startLine(user *u) {
		cout << "운이 좋게 시작점에 멈췄습니다. 5만 원 보너스 지급합니다." << endl;
		u->setMoney(u->getMoney() + 50000);
		cout << "현재 금액: " << u->getMoney() << endl << endl;
	}

	//매 턴마다 화면을 갱신
	void turnOver() {
		cout << "Made by Ahn Juyoung" << endl;
		cout << "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" << endl;
		cout << "┏ " << ld[6].getInfo(u1, u2) << "━ " << ld[7].getInfo(u1, u2) << "━ " << ld[8].getInfo(u1, u2) << "━ " << ld[9].getInfo(u1, u2) << "━ " << ld[10].getInfo(u1, u2) << "━ " << ld[11].getInfo(u1, u2) << "━ " << ld[12].getInfo(u1, u2) << "┓ " << endl;
		cout << "┃ " << ld[5].getInfo(u1, u2) << "                                                              " << ld[13].getInfo(u1, u2) << "┃ ☞☞☞☞☞☞☞☞☞상황판☜☜☜☜☜☜☜☜" << endl;
		cout << "┃ " << ld[4].getInfo(u1, u2) << "                                                              " << ld[14].getInfo(u1, u2) << "┃ 유저 이름 -       " << u1->getName() << "        " << u2->getName() << endl;
		cout << "┃ " << ld[3].getInfo(u1, u2) << "                                                              " << ld[15].getInfo(u1, u2) << "┃ 유저 위치 -        " << ld[u1->getLoc()].getInfo() << "          " << ld[u2->getLoc()].getInfo() << endl;
		cout << "┃ " << ld[2].getInfo(u1, u2) << "                                                              " << ld[16].getInfo(u1, u2) << "┃ 금액 현황 -      " << u1->getMoney() << "원     " << u2->getMoney() << "원" << endl;
		cout << "┃ " << ld[1].getInfo(u1, u2) << "                                                              " << ld[17].getInfo(u1, u2) << "┃ 턴 카운트                   " << turn_count << endl;
		cout << "┃ " << ld[0].getInfo(u1, u2) << "                                                              " << ld[18].getInfo(u1, u2) << "┃ 파산 면책 카드 -    " << (u1->isRevial() ? "●" : "NO") << "            " << (u2->isRevial() ? "●" : "NO") << endl;
		cout << "┗ " << ld[25].getInfo(u1, u2) << "━ " << ld[24].getInfo(u1, u2) << "━ " << ld[23].getInfo(u1, u2) << "━ " << ld[22].getInfo(u1, u2) << "━ " << ld[21].getInfo(u1, u2) << "━ " << ld[20].getInfo(u1, u2) << "━ " << ld[19].getInfo(u1, u2) << "┛ ☞☞☞☞☞☞☞☞☞안주영1☜☜☜☜☜☜☜☜" << endl;
		cout << "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" << endl;
		cout << u1->getName() << "의 소유한 땅은 ";
		for (int i = 0; i < 24; i++) {
			if (ld[i].getOwner_name() == u1->getName()) {
				cout << ld[i].getInfo() << " ";
			}
		}
		cout << endl;
		cout << u2->getName() << "의 소유한 땅은 ";

		for (int i = 0; i < 24; i++) {
			if (ld[i].getOwner_name() == u2->getName()) {
				cout << ld[i].getInfo() << " ";
			}
		}
		cout << endl;
		cout << "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" << endl;
	}
};


int main() {
	game g;
	g.init();
	g.start();	

	int k;
	cin >> k;

}